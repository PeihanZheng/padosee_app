import 'dart:convert';

import 'package:dio/dio.dart';
import 'package:flutter/material.dart';
import 'package:padosee/constants/api_routes.dart';
import 'package:padosee/models/HttpException.dart';
import 'package:padosee/models/data_models/camera_model.dart';
import 'package:shared_preferences/shared_preferences.dart';

import '../common/methods.dart';

class DashboardApis {
  Dio dio = Dio();
  List<CameraModel> cameraList = [];

  Future<List<CameraModel>?> getCameras(BuildContext context, {String? accessToken}) async {
    const url = ApiRouter.baseUrl + ApiRouter.getCameraList;
    try {
      Response response = await dio.get(
        url,
        options: Options(
          headers: {
            "Accept": "application/json",
            "x-access-token": accessToken,
          },
        ),
      );
      if (response.statusCode == 200) {
        if (response.data['status'] == false) {
          throw HttpException(response.data['message']);
        } else {
          for (var data in response.data['data']) {
            cameraList.add(CameraModel.fromJson(data));
          }
          setCameraData(cameraList);
          return cameraList;
        }
      } else if (response.statusCode == 500) {
        customSnackbar(message: "Error message generated by the server", isSuccess: false);
      }
      return null;
    } catch (error) {
      customSnackbar(message: "Somthing wrong please try anagin", isSuccess: false);
    }
  }

  void setCameraData(List<CameraModel> userData) async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    final encodedData = json.encode(userData);
    if (prefs.containsKey('cameraData')) {
      prefs.remove('cameraData');
    }
    prefs.setString('cameraData', encodedData);
  }
}
